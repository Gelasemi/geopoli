import subprocess
import sys
import importlib
import streamlit as st

def install_and_import(package_name):
    """Installe un package s'il n'est pas disponible et l'importe"""
    try:
        return importlib.import_module(package_name)
    except ImportError:
        print(f"Installation de {package_name}...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", package_name])
        return importlib.import_module(package_name)

# Installer et importer les d√©pendances n√©cessaires
px = install_and_import("plotly.express")
go = install_and_import("plotly.graph_objects")
pd = install_and_import("pandas")
np = install_and_import("numpy")

# Configuration de la page
st.set_page_config(
    page_title="Analyse G√©opolitique Mondiale",
    page_icon="üåç",
    layout="wide",
    initial_sidebar_state="expanded"
)

# En-t√™te avec profil
st.markdown("""
<div style="background-color: #f8f9fa; padding: 20px; border-radius: 10px; margin-bottom: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.05);">
    <div style="display: flex; align-items: center;">
        <img src="https://via.placeholder.com/120" style="border-radius: 50%; border: 3px solid #dee2e6; margin-right: 20px;" width="120">
        <div>
            <h1 style="margin-bottom: 5px;">Prince Manantenasoa Dauphin Gelase Michelot</h1>
            <p style="margin-bottom: 0; color: #6c757d; font-style: italic;">Membre de la communaut√© royale de Madagascar</p>
            <p style="margin-bottom: 0;">Expert en g√©opolitique et relations internationales</p>
        </div>
    </div>
</div>
""", unsafe_allow_html=True)

st.title("Analyse G√©opolitique Mondiale Compl√®te")
st.markdown("### Cartographie des risques, conflits et soul√®vements par pays, r√©gion et continent")

# Donn√©es des pays (exemple simplifi√©)
countries_data = {
    "Afrique": {
        "Afrique du Nord": {
            "Alg√©rie": {"risk": "6/10", "indicators": ["Autoritarisme", "Crise √©conomique"]},
            "√âgypte": {"risk": "8/10", "indicators": ["Autoritarisme", "R√©pression"]},
            "Libye": {"risk": "10/10", "indicators": ["Effondrement de l'√âtat", "Guerre civile"]},
            "Maroc": {"risk": "4/10", "indicators": ["Autoritarisme", "In√©galit√©s"]},
            "Tunisie": {"risk": "7/10", "indicators": ["Crise √©conomique", "Instabilit√©"]},
            "Soudan": {"risk": "10/10", "indicators": ["Guerre civile", "R√©pression"]}
        },
        "Afrique de l'Ouest": {
            "Burkina Faso": {"risk": "10/10", "indicators": ["Jihadisme", "Coups d'√âtat"]},
            "Mali": {"risk": "10/10", "indicators": ["Jihadisme", "Coups d'√âtat"]},
            "Niger": {"risk": "10/10", "indicators": ["Coup d'√âtat", "Ins√©curit√©"]},
            "Nigeria": {"risk": "9/10", "indicators": ["Terrorisme", "Conflits ethniques"]},
            "C√¥te d'Ivoire": {"risk": "5/10", "indicators": ["Tensions politiques", "In√©galit√©s"]}
        }
    },
    "Am√©riques": {
        "Am√©rique du Nord": {
            "USA": {"risk": "8/10", "indicators": ["Polarisation politique", "Violence politique"]},
            "Canada": {"risk": "2/10", "indicators": ["Tensions identitaires"]},
            "Mexique": {"risk": "9/10", "indicators": ["Criminalit√© organis√©e", "Corruption"]}
        }
    },
    "Asie": {
        "Asie de l'Est": {
            "Chine": {"risk": "7/10", "indicators": ["Autoritarisme", "Tensions ethniques"]},
            "Cor√©e du Nord": {"risk": "9/10", "indicators": ["Dictature totalitaire", "Nucl√©aire"]},
            "Japon": {"risk": "3/10", "indicators": ["Vieillissement d√©mographique"]},
            "Ta√Øwan": {"risk": "9/10", "indicators": ["Menace d'invasion chinoise"]}
        }
    },
    "Europe": {
        "Europe de l'Est": {
            "Ukraine": {"risk": "10/10", "indicators": ["Invasion russe", "Guerre"]},
            "Russie": {"risk": "9/10", "indicators": ["Autoritarisme", "Guerre en Ukraine"]},
            "Bi√©lorussie": {"risk": "8/10", "indicators": ["Autoritarisme", "D√©pendance russe"]}
        }
    },
    "Oc√©anie": {
        "Australasie": {
            "Australie": {"risk": "2/10", "indicators": ["Tensions raciales"]},
            "Nouvelle-Z√©lande": {"risk": "1/10", "indicators": ["Stabilit√© relative"]}
        }
    }
}

# Sc√©narios de pr√©diction
scenarios_data = [
    {"name": "Triade Autoritaire", "probability": 92, "factors": "Pr√©sident >10 ans + Corruption + R√©pression"},
    {"name": "Crise √âconomique", "probability": 87, "factors": "Inflation >50% + Ch√¥mage jeunes >30%"},
    {"name": "Fragmentation Ethnique", "probability": 78, "factors": "Conflits ethniques + In√©galit√©s"},
    {"name": "Ins√©curit√© Multiforme", "probability": 82, "factors": "Terrorisme + Criminalit√© organis√©e"},
    {"name": "Crise Environnementale", "probability": 65, "factors": "S√©cheresse + P√©nuries d'eau"},
    {"name": "Ing√©rence √âtrang√®re", "probability": 75, "factors": "Troupes √©trang√®res + Soutien √† groupes arm√©s"},
    {"name": "Transition D√©mocratique", "probability": 70, "factors": "Institutions faibles + Corruption"}
]

# Fonction pour calculer la probabilit√© de conflit
def predict_conflict_probability(indicators):
    critical_indicators = [
        "Corruption", "Autoritarisme", "R√©pression", "Guerre civile", "Terrorisme",
        "Pauvret√©", "In√©galit√©s", "Instabilit√©", "Effondrement de l'√âtat",
        "Violence politique", "Criminalit√© organis√©e", "Coups d'√âtat",
        "Tensions ethniques", "Conflits religieux", "Crise √©conomique",
        "Ch√¥mage jeunes", "Inflation", "D√©pendance aux ressources",
        "Stress hydrique", "Changement climatique"
    ]
    
    score = sum(1 for indicator in indicators if any(critical in indicator for critical in critical_indicators))
    max_score = len(indicators)
    probability = min(100, int((score / max_score) * 100))
    
    return probability

# Interface utilisateur
st.header("Mod√®le de Pr√©diction des Conflits")

# S√©lection du continent
continent = st.selectbox("S√©lectionner un continent", list(countries_data.keys()))

# S√©lection de la r√©gion
region = st.selectbox("S√©lectionner une r√©gion", list(countries_data[continent].keys()))

# S√©lection du pays
country = st.selectbox("S√©lectionner un pays", list(countries_data[continent][region].keys()))

# Afficher les d√©tails du pays
country_data = countries_data[continent][region][country]

col1, col2 = st.columns([1, 3])

with col1:
    # Jauge de risque
    risk_value = int(country_data["risk"].split("/")[0])
    
    fig = go.Figure(go.Indicator(
        mode="gauge+number",
        value=risk_value,
        domain={'x': [0, 1], 'y': [0, 1]},
        title={'text': "Risque Actuel"},
        gauge={
            'axis': {'range': [None, 10]},
            'bar': {'color': "darkblue"},
            'steps': [
                {'range': [0, 2], 'color': "lightgreen"},
                {'range': [2, 4], 'color': "green"},
                {'range': [4, 6], 'color': "yellow"},
                {'range': [6, 8], 'color': "orange"},
                {'range': [8, 10], 'color': "red"}
            ],
            'threshold': {
                'line': {'color': "red", 'width': 4},
                'thickness': 0.75,
                'value': risk_value
            }
        }
    ))
    
    fig.update_layout(height=300, margin=dict(l=20, r=20, t=40, b=20))
    st.plotly_chart(fig, use_container_width=True)
    
    # Badge de risque
    risk_colors = {
        0: "#28a745", 1: "#5cb85c", 2: "#8bc34a", 3: "#cddc39", 4: "#ffeb3b",
        5: "#ffc107", 6: "#ff9800", 7: "#ff5722", 8: "#f44336", 9: "#d32f2f", 10: "#b71c1c"
    }
    
    st.markdown(f"""
    <div style="text-align: center; margin-top: 20px;">
        <span style="background-color: {risk_colors[risk_value]}; color: white; padding: 5px 10px; border-radius: 15px; font-weight: bold; font-size: 0.8rem;">
            {country_data["risk"]}
        </span>
    </div>
    """, unsafe_allow_html=True)

with col2:
    st.subheader(f"Analyse d√©taill√©e: {country}")
    
    # Indicateurs critiques
    st.markdown("**Indicateurs critiques:**")
    for indicator in country_data["indicators"]:
        st.markdown(f"- {indicator}")
    
    # Calculer la probabilit√© de conflit
    probability = predict_conflict_probability(country_data["indicators"])
    st.metric("Probabilit√© de conflit", f"{probability}%", delta=None)

# Sc√©narios de pr√©diction
st.markdown("---")
st.header("Sc√©narios de Combinaison de Facteurs")

for scenario in scenarios_data:
    risk_class = "scenario-high" if scenario["probability"] >= 80 else ("scenario-medium" if scenario["probability"] >= 65 else "scenario-low")
    bg_color = "#d32f2f" if scenario["probability"] >= 80 else ("#ff9800" if scenario["probability"] >= 65 else "#8bc34a")
    
    st.markdown(f"""
    <div style="border-left: 5px solid {bg_color}; padding: 15px; margin-bottom: 15px; border-radius: 5px; background-color: rgba(211, 47, 47, 0.1) if {scenario['probability'] >= 80 else rgba(255, 152, 0, 0.1) if {scenario['probability'] >= 65 else rgba(139, 195, 74, 0.1)}">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h5>{scenario['name']}</h5>
            <span style="background-color: {bg_color}; color: white; padding: 5px 10px; border-radius: 15px; font-weight: bold; font-size: 0.8rem;">
                {scenario['probability']}%
            </span>
        </div>
        <p><strong>Facteurs:</strong> {scenario['factors']}</p>
        <p><strong>√âv√©nement probable:</strong> Soul√®vement populaire ou coup d'√âtat militaire</p>
    </div>
    """, unsafe_allow_html=True)

# Recommandations
st.markdown("---")
st.header("Recommandations pour les Dirigeants Politiques")

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("#### <span style='color:green'>Pr√©vention</span>", unsafe_allow_html=True)
    st.markdown("- **R√©formes institutionnelles**: Limitation des mandats, ind√©pendance judiciaire")
    st.markdown("- **Transparence**: Lutte anti-corruption, e-gouvernement")
    st.markdown("- **Inclusion**: Int√©gration des minorit√©s, d√©centralisation")
    st.markdown("- **√âducation**: Programmes pour la jeunesse")
    st.markdown("- **Environnement**: Gestion durable des ressources")

with col2:
    st.markdown("#### <span style='color:orange'>Intervention</span>", unsafe_allow_html=True)
    st.markdown("- **Dialogue national**: Processus inclusif")
    st.markdown("- **M√©diation internationale**: ONU, UA, CEDEAO")
    st.markdown("- **Gouvernance partag√©e**: Gouvernements d'union")
    st.markdown("- **R√©formes s√©curitaires**: Int√©gration des ex-combattants")
    st.markdown("- **Aide √©conomique**: Soutien √† la croissance")

with col3:
    st.markdown("#### <span style='color:red'>Gestion de Crise</span>", unsafe_allow_html=True)
    st.markdown("- **Op√©rations de paix**: Mandats robustes de l'ONU")
    st.markdown("- **Justice transitionnelle**: CPI, tribunaux")
    st.markdown("- **Aide humanitaire**: Coordination internationale")
    st.markdown("- **Reconstruction**: Plans post-conflit")
    st.markdown("- **Pr√©vention des r√©currences**: D√©sarmement")
